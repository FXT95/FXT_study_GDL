EPS = 0.00001UnID=1pen pen_bgif type_bg="空心三角"then SET FILL 65if type_bg="实心三角"then SET FILL 64add2 -A/2,0	gosub "defineStyles"	_textStyleName        = "LabStyle"arrow_h = text_h*GLOB_SCALEarrow_w = 2*arrow_hif mirr>=0 then mm=1 else mm=-1if type_bg="常规标高" then sj=1 else sj=-1if type_bg<>"常规标高" thenyline=0mirr=0mm=1endif if zdybg<>"" then	j=0	FOR i=1 TO STRLEN(zdybg)	IF split(STRSUB(zdybg,i,1),"%s",zdy_txt)=1 then        if zdy_txt<>"." and zdy_txt<>"-" then j=1    ENDIF	NEXT i	IF j=0 then        if STRSTR(zdybg,".")>0 then zdybg=zdybg+"0"		n=split(zdybg,"%n",zdy_num)		txt_str=str("%m", zdy_num)        If ABS(zdy_num) < EPS Then txt_str = "±" + txt_str    else    txt_str=zdybg    endifELSE   if glob_context=4 then l_txt =SYMB_POS_Y  else  l_txt = GLOB_CSTORY_ELEV   txt_str = str ("%m", l_txt)   If ABS(l_txt) < EPS Then txt_str = "±" + txt_strendifif stru then	j=0	FOR i=1 TO STRLEN(stru_txt)	IF split(STRSUB(stru_txt,i,1),"%s",s_txt)=1 then        if s_txt<>"." and s_txt<>"-" then j=1    ENDIF	NEXT i	IF j=0 then        if STRSTR(stru_txt,".")>0 then stru_txt=stru_txt+"0"		n=split(stru_txt,"%n",stru_num)		stru_txt=str("%m", stru_num)        If ABS(stru_num) < EPS Then stru_txt = "±" + stru_txt    endifendif   If kh Then txt_str="(" + txt_str + ")"txt_str=qz+txt_str+hzw_txt = (stw (txt_Str))/1000if STRSTR(txt_str,"±")<>0 then w_txt=w_txt-(stw ("±"))/1000if STRSTR(txt_str,"-")<>0 then w_txt=w_txt-(stw ("-"))/1000if stru and yline<-arrow_h and yline>-arrow_h*4 then tt=1if yline>-arrow_h and yline<arrow_h then yline=0if yline>-arrow_h*3 and yline<-arrow_h then yline=-arrow_h*2if yline<-arrow_h*4 then tt=1 else tt=-1if stru and yline<-arrow_h and yline>-arrow_h*4 then yline=-arrow_h*5 : tt=1if combg and yline<0 then yline=0txt_arch=txt_strif stru then txt_str="(" + stru_txt + ")"  w_txt= (stw (txt_Str))/1000-(stw (")"))/1000else txt_str=txt_archendifIf yline<-arrow_h Then	 _stText = txt_str	gosub "makeParagraph_text_1"	richtext2 (arrow_h+w_txt*GLOB_SCALE)*mm+w_txt*GLOB_SCALE*(1/2-mm/2+(sj/4-1/4)*mm)-arrow_h*(1-sj)/2,yline+arrow_h*tt,"textBlock" + _textStyleName    if stru then 	 _stText =  txt_arch	gosub "makeParagraph_text_1"	richtext2 (arrow_h+w_txt*GLOB_SCALE)*mm+w_txt*GLOB_SCALE*(1/2-mm/2+(sj/4-1/4)*mm)-arrow_h*(1-sj)/2-(stw (")"))*GLOB_SCALE/1000, yline+arrow_h*(tt+1.5), "textBlock" + _textStyleName		ENDIF    if type_bg="常规标高" then line2 0,arrow_h+yline,(arrow_h+w_txt*GLOB_SCALE)*mm,arrow_h+yline    IF yline+arrow_h*2<-EPS then line2 0,0,0,arrow_h+yline   	poly2 4,2-sj,  0,0,				arrow_h,-arrow_h,				-arrow_h,-arrow_h,				0,0Else        if combg then		IF first_bg<>"" then			if STRSTR(first_bg,".")>0 then first_bg=first_bg+"0"			n=split(first_bg,"%n",first_num)		ELSE		   if glob_context=4 then first_num =SYMB_POS_Y  else  first_num = GLOB_CSTORY_ELEV		ENDIF        for k=1 to num_bg			k_str=str("%m", first_num+(k-1)*delta)			If ABS(first_num+(k-1)*delta) < EPS Then k_str = "±" + k_str            if kh then k_str="("+k_str+")"            if com_hz<>0 then                 lc=str(com_hz+k-1,1,0)                 if com_hz<0 and com_hz+k-1>=0 then lc=str(com_hz+k,1,0)                 k_str=k_str+"("+lc+"层)"            endif            w_txt=(stw(k_Str))/1000			if STRSTR(k_str,"±")<>0 then w_txt=w_txt-(stw ("±"))/1000			if STRSTR(k_str,"-")=1 then w_txt=w_txt-(stw ("-"))/1000		 _stText = k_str		gosub "makeParagraph_text_1"            richtext2 (arrow_h+w_txt*GLOB_SCALE)*mm+w_txt*GLOB_SCALE*(1/2-mm/2+(sj/4-1/4)*mm)-arrow_h*(1-sj)/2, h_txt+yline+arrow_h*(k*1.5-0.5), "textBlock" + _textStyleName        next k    else	 _stText = txt_str 	gosub "makeParagraph_text_1"      richtext2 (arrow_h+w_txt*GLOB_SCALE)*mm+w_txt*GLOB_SCALE*(1/2-mm/2+(sj/4-1/4)*mm)-arrow_h*(1-sj)/2, arrow_h+h_txt+yline,"textBlock"        if stru then 		 _stText = txt_arch		gosub "makeParagraph_text_1"		richtext2 (arrow_h+w_txt*GLOB_SCALE)*mm+w_txt*GLOB_SCALE*(1/2-mm/2+(sj/4-1/4)*mm)-arrow_h*(1-sj)/2-(stw (")"))*GLOB_SCALE/1000, arrow_h*2.5+h_txt+yline, "textBlock" + _textStyleName    endif    endif	if type_bg="常规标高" then line2 0,arrow_h+yline,0.72*(1+HX_TextCharWidthFactor_1)*(1+AC_TextCharSpaceFactor_1)*(arrow_h+w_txt*GLOB_SCALE)*mm,arrow_h+yline    IF yline>EPS then line2 0,0,0,arrow_h+yline	poly2 4,2-sj,  0,0,				arrow_h,arrow_h,				-arrow_h,arrow_h,				0,0EndifIf xline then line2 -arrow_h,0,arrow_h,0hotspot2 0,0if type_bg="常规标高" thenHotspot2 0,arrow_h,UnID,yline,1+128:unID=unID+1Hotspot2 0,arrow_h+yline,UnID,yline,2 :unID=unID+1Hotspot2 0,arrow_h-1,UnID,yline,3 :unID=unID+1if mirr>-arrow_h then mirr=0if mirr<-arrow_h then mirr=-arrow_wHotspot2 arrow_h,arrow_h+yline,UnID,mirr,1+128:unID=unID+1Hotspot2 arrow_h+mirr,arrow_h+yline,UnID,mirr,2 :unID=unID+1Hotspot2 arrow_h-1,arrow_h+yline,UnID,mirr,3 :unID=unID+1endifIf xline thenHotspot2 0,xline_y,UnID,xline_x,1+128:unID=unID+1Hotspot2 xline_x,xline_y,UnID,xline_x,2 :unID=unID+1Hotspot2 -1,xline_y,UnID,xline_x,3 :unID=unID+1Hotspot2 xline_x,0,UnID,xline_y,1+128:unID=unID+1Hotspot2 xline_x,xline_y,UnID,xline_y,2 :unID=unID+1Hotspot2 xline_x,-1,UnID,xline_y,3 :unID=unID+1if xline_x>=0 then line2 arrow_h,0,xline_x,xline_y else line2 -arrow_h,0,xline_x,xline_yendifEND!============================================================================! ============================================================================="defineStyles":! =============================================================================define style{2} "LabStyle"  zt,text_h*GLOB_SCALE, 0style "LabStyle"return! =============================================================================="makeParagraph_text_1":! ------------------------------------------------------------------------------!	Input Parameters:!		_textStyleName:			Current Text Style Name!		_stText:				Current string!		_ _anchor:		Current Anchor Position!	Output Parameters:			none! ==============================================================================!	PARAGRAPH _textStyleName 1, 1, 5, 0, 1!		pen 1!		style _textStyleName!		_stText!	ENDPARAGRAPH!	 _textblock_anchor  = 8	TEXTBLOCK "textBlock" 0, _textblock_anchor, 0, HX_TextCharWidthFactor_1, AC_TextCharSpaceFactor_1, 0, "string"return